<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yaofei.springmvcmybatis.repository.SysLogRepository">

    <!-- sql片段 -->
    <sql id="query_list_where">
        <if test="extraSearch !=null">
            <!-- where可以自动去除第一个and -->
            <where>
                <if test="extraSearch.username !=null and extraSearch.username !=''">
                    and username like CONCAT('%',#{extraSearch.username},'%')
                </if>
                <if test="extraSearch.userRealName !=null and extraSearch.userRealName !=''">
                    and user_real_name like CONCAT('%',#{extraSearch.userRealName},'%')
                </if>
                <if test="extraSearch.opertionClassName !=null and extraSearch.opertionClassName !=''">
                    and opertion_class_name like CONCAT('%',#{extraSearch.opertionClassName},'%')
                </if>
                <if test="extraSearch.opertionMethodName !=null and extraSearch.opertionMethodName !=''">
                    and opertion_method_name like CONCAT('%',#{extraSearch.opertionMethodName},'%')
                </if>
                <if test="extraSearch.opertionParamValue !=null and extraSearch.opertionParamValue !=''">
                    and opertion_param_value like CONCAT('%',#{extraSearch.opertionParamValue},'%')
                </if>
            </where>
        </if>
    </sql>

    <select id="queryTotal" resultType="long">
		select count(*) from sys_log where is_deleted = 0
	</select>

    <select id="queryListTotal" parameterType="com.yaofei.springmvcmybatis.plugins.datatables.domain.DataTablesRequest"
            resultType="long">
        select count(*) from sys_log
        <!-- 引用sql片段 -->
        <include refid="query_list_where"/>
    </select>

    <select id="queryList" resultType="com.yaofei.springmvcmybatis.entity.SysLog">
        select * from sys_log
        <!-- 引用sql片段 -->
        <include refid="query_list_where"/>

        <choose>
            <when test="orderString != null and orderString != ''">
                order by ${orderString}
            </when>
            <otherwise>
                order by id DESC
            </otherwise>
        </choose>
        <if test="start != null and length != null">
            limit #{start}, #{length}
        </if>
    </select>


    <select id="queryObject" resultType="com.yaofei.springmvcmybatis.entity.SysLog">
		select * from sys_log where id = #{value}
	</select>


    <insert id="save" parameterType="com.yaofei.springmvcmybatis.entity.SysLog" useGeneratedKeys="true"
            keyProperty="id">
		insert into sys_log
		(
			`username`, 
			`user_real_name`, 
			`opertion_class_name`,
			`opertion_method_name`,
			`opertion_param_value`,
			`client_ip`
		)
		values
		(
			#{username}, 
			#{userRealName}, 
			#{opertionClassName},
			#{opertionMethodName},
			#{opertionParamValue},
			#{clientIp}
		)
	</insert>

    <update id="update" parameterType="com.yaofei.springmvcmybatis.entity.SysLog">
        update sys_log
        <set>
            <if test="username != null">`username` = #{username},</if>
            <if test="userRealName != null">`user_real_name` = #{userRealName},</if>
            <if test="opertionClassName != null">`opertion_class_name` = #{opertionClassName},</if>
            <if test="opertionMethodName != null">`opertion_method_name` = #{opertionMethodName},</if>
            <if test="opertionParamValue != null">`opertion_param_value` = #{opertionParamValue},</if>
            <if test="clientIp != null">`client_ip` = #{clientIp},</if>
            <if test="createdTime != null">`created_date` = #{createdTime}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete">
		delete from sys_log where id = #{value}
	</delete>

    <delete id="deleteBatch">
        delete from sys_log where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>